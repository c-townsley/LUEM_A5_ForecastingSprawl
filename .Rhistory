plotTheme
# development_change instead of lc_change?
dat %>%
dplyr::select(pop09,pop19,pop_Change,development_change) %>%
gather(Variable, Value, -development_change, -geometry) %>%
ggplot(., aes(development_change, Value, fill=development_change)) +
geom_bar(position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~Variable) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development"),
name="") +
labs(title="New Development as a Function of Factor Variables") +
plotTheme
# From this conversion table, we see that forested areas in 2008 were the most likely to be developed in 2019, at 8.85% liklihood of development...
## Although I am kind of confused as to why developed08 is the second largest. I think this is because this is based on the two adjacent cells, showing that development was 8.25% likely adjacent to two cells that were developed, second onlt to forested areas. If true, this shows that Atlanta has a preference for developing woodlands first, with areas adjacent to those that are already developed as a close second.
dat %>%
dplyr::select(development_change:otherUndeveloped08,developed08) %>%
gather(Land_Cover_Type, Value, -development_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(development_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(development_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate) %>%
knitr::kable() %>% kable_styling(full_width = T)
#table showing up blank for charlie :/
dat %>%
dplyr::select(development_change:otherUndeveloped08,developed08) %>%
gather(Land_Cover_Type, Value, -development_change, -geometry) %>%
st_set_geometry(NULL) %>%
group_by(development_change, Land_Cover_Type) %>%
summarize(n = sum(as.numeric(Value))) %>%
ungroup() %>%
mutate(Conversion_Rate = paste0(round(100 * n/sum(n), 2), "%")) %>%
filter(development_change == 1) %>%
dplyr::select(Land_Cover_Type,Conversion_Rate) %>%
reactable()
set.seed(3456)
trainIndex <-
createDataPartition(dat$developed08, p = .50,
list = FALSE,
times = 1)
datTrain <- dat[ trainIndex,]
datTest  <- dat[-trainIndex,]
nrow(dat)
Model1 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08,
family="binomial"(link="logit"), data = datTrain)
Model2 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08 + lagDevelopment08,
family="binomial"(link="logit"), data = datTrain)
Model3 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08 + lagDevelopment08 + pop09,
family="binomial"(link="logit"), data = datTrain)
Model4 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08 + lagDevelopment08 + pop09 +
pop19,
family="binomial"(link="logit"), data = datTrain)
Model5 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08 + lagDevelopment08 + pop_Change,
family="binomial"(link="logit"), data = datTrain)
Model6 <- glm(development_change ~ wetlands08 + forest08  + farm08 + otherUndeveloped08 + lagDevelopment08 + pop_Change +               distance_highways,
family="binomial"(link="logit"), data = datTrain)
modelList <- paste0("Model", 1:6)
map_dfc(modelList, function(x)pR2(get(x)))[4,] %>%
setNames(paste0("Model",1:6)) %>%
gather(Model,McFadden) %>%
ggplot(aes(Model,McFadden)) +
geom_bar(stat="identity") +
labs(title= "McFadden R-Squared by Model") +
plotTheme
testSetProbs <-
data.frame(class = datTest$development_change,
probs = predict(Model6, datTest, type="response"))
ggplot(testSetProbs, aes(probs)) +
geom_density(aes(fill=class), alpha=0.5) +
scale_fill_manual(values = palette2,
labels=c("No Change","New Development")) +
labs(title = "Histogram of test set predicted probabilities",
x="Predicted Probabilities",y="Density") +
plotTheme
options(yardstick.event_first = FALSE)
testSetProbs <-
testSetProbs %>%
mutate(predClass_05 = as.factor(ifelse(testSetProbs$probs >= 0.05 ,1,0)),
predClass_17 = as.factor(ifelse(testSetProbs$probs >= 0.17 ,1,0)))
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable()
predsForMap <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
dplyr::select(development_change,Threshold_5_Pct,Threshold_17_Pct) %>%
gather(Variable,Value, -geometry) %>%
st_cast("POLYGON")
ggplot() +
geom_point(data=predsForMap, aes(x=xyC(predsForMap)[,1], y=xyC(predsForMap)[,2], colour=Value)) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("No Change","New Development"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
ConfusionMatrix.metrics <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
mutate(TrueP_05 = ifelse(development_change  == 1 & Threshold_5_Pct == 1, 1,0),
TrueN_05 = ifelse(development_change  == 0 & Threshold_5_Pct == 0, 1,0),
TrueP_17 = ifelse(development_change  == 1 & Threshold_17_Pct == 1, 1,0),
TrueN_17 = ifelse(development_change  == 0 & Threshold_17_Pct == 0, 1,0)) %>%
dplyr::select(., starts_with("True")) %>%
gather(Variable, Value, -geometry) %>%
st_cast("POLYGON")
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = c(highlight, gray), labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
#We created a new highway in eastern Atlanta where development between 2008 and 2019 has not previously concentrated. This was also a forested area, so the fact that much development had not happened there over the earlier period aroused our curiosity. This way, we can test the extend that a new road investment influences development in on most desirable area of land cover.
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson")
new_highway <- new_highway %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
#new_highway <- st_write(new_highway,"C:/Users/Lindsey/Desktop/CPLN675_Land_Use_Modeling_Desktop/Final/LUEM_A5_Repo/Data/geojson/new_highway.geojson")
#ALL HIGHWAYS MERGED TOGETHER -- highways_all --
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/highways_all.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
## I was trying to get the Existing Highways and New Highway legend items to appear but gave up for now.
ggplot() +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_colour_manual(values = c(gray, "#ED7953FF"),
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways\nin dark blue and a new highway in cyan") +
geom_sf(data=AtlantaHighways, color = highlight, linewidth = .5) +
geom_sf(data = Atlanta_MSA, fill = "transparent",
color = "black", linewidth = .75) +
geom_sf(data=new_highway, colour="cyan", linewidth=1) +
#scale_color_manual(values=c("Existing Highways" = "black","New Highway" = "cyan"))+
mapTheme
#                  labels=c("Existing Highways", "New Highway"))
#Skip#
ggplot() +
geom_sf(data=Atlanta_MSA) +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_color_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways in black and a new highway in cyan") +
geom_sf(data=highways_all, colour="black", linewidth=.5)+
mapTheme
new_highway_raster <-
as(highways_all,'Spatial') %>%
rasterize(.,emptyRaster)
new_highway_raster_distance <- distance(new_highway_raster)
names(new_highway_raster_distance) <- "distance_highways"
new_highwayPoints <-
rasterToPoints(new_highway_raster_distance) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(AtlantaMSA_fishnet))
new_highwayPoints_fishnet <-
aggregate(new_highwayPoints, AtlantaMSA_fishnet, mean) %>%
mutate(distance_highways = ifelse(is.na(distance_highways),0,distance_highways))
ggplot() +
geom_sf(data=metro_counties) +
geom_point(data=new_highwayPoints_fishnet, aes(x=xyC(new_highwayPoints_fishnet)[,1],
y=xyC(new_highwayPoints_fishnet)[,2],
colour=factor(ntile(distance_highways,5))),size=1.5) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(new_highwayPoints_fishnet,"distance_highways"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=highways_add, colour = "black") +
labs(title = "Distance to Highways",
subtitle = "As fishnet centroids; Highways visualized in black") +
mapTheme
ggplot() +
geom_sf(data=metro_counties) +
geom_point(data=new_highwayPoints_fishnet, aes(x=xyC(new_highwayPoints_fishnet)[,1],
y=xyC(new_highwayPoints_fishnet)[,2],
colour=factor(ntile(distance_highways,5))),size=1.5) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(new_highwayPoints_fishnet,"distance_highways"),1,8),
name="Quintile\nBreaks") +
geom_sf(data=highways_all, colour = "black") +
labs(title = "Distance to Highways",
subtitle = "As fishnet centroids; Highways visualized in black") +
mapTheme
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2019,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2029.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2019,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
dat <-
dat %>%
mutate(lagDevelopment08 = nn_function(xyC(.), xyC(filter(., developed19 == 1)),2))
#County projections 2029
#Barrow 96977 -
#Bartow 119594 -
#Carroll 131577 -
#Cherokee  301752-
#Clayton  321410-
#Cobb  830671-
#Coweta  172341 -
#Dawson    	32572-
#DeKalb  822154-
#Douglas  160635-
#Fayette  128627-
#Forsyth   316165-
#Fulton  1198334-
#Gwinnett   1044026-
#Hall   	232720-
#Henry   278739-
#Newton 130559-
#Paulding 208196-
#Rockdale 	95574-
#Spalding   70974-
#Walton 	109205-
countyPopulation_2029 <-
data.frame(
NAME = Counties,
county_projection_2029 =
c(96977,119594,131577,301752,321410,830671,172341,32572,822154,160635,128627,
316165,1198334,1044026,232720,278739,130559,208196,95574,70974,109205)) %>%
left_join(
dat %>%
st_set_geometry(NULL) %>%
group_by(NAME) %>%
summarize(county_population_2019 = round(sum(pop19))))
countyPopulation_2029 %>%
gather(Variable,Value, -NAME) %>%
ggplot(aes(reorder(NAME,-Value),Value)) +
geom_bar(aes(fill=Variable), stat = "identity", position = "dodge") +
scale_fill_manual(values = palette2,
labels=c("2019","2029"),
name="Population") +
labs(title="Population Change by County: 2019 - 2029",
x="County", y="Population") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
plotTheme
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2019,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2029.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2019,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2029.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill,"predict_2029.infill"),1,4),
name="Quintile\nBreaks") +
geom_sf(data=metro_counties, fill=NA, colour="white", size=.75) +
labs(title= "Development Demand in 2029: Predicted Probabilities") +
mapTheme
View(developed19)
dat2 <-
dat2 %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0))
dat <-
dat %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0))
glimpse(dat)
dat2 <-
dat %>%
mutate(sensitive_lost19 = ifelse(forest08 == "1" & forest19 == "0" |
wetlands08 == '1' & wetlands19 == '0',1,0))
dat2 <-
dat %>%
mutate(sensitive_lost19 = ifelse(forest08 = "1" & forest19 = "0" |
View(dat)
rasters19_map <- aggregatedRasters19 %>%
gather(var,value,developed19:water19) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = c(gray, highlight),
labels=c("False","True"),
name = "") +
geom_sf(data=metro_counties,
color = "white",
fill = "transparent",
linewidth = .25) +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .5) +
labs(title = "Land Cover Types, 2019",
subtitle = "As fishnet centroids") +
mapTheme +
theme()  +
theme(legend.position = "none")
rasters19_map
dat2 <-
aggregateRaster(theRasterList19, dat) %>%
dplyr::select(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat) %>%
st_sf() %>%
st_cast("POLYGON")
rasters19_map
dat2 <-
dat2 %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0))
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost19))) +
scale_colour_manual(values = c(gray, highlight),
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2009 - 2019",
subtitle = "As fishnet centroids") +
mapTheme
dat2 <-
dat2 %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0)) %>%
st_transform("ESRI:102267")
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost19))) +
scale_colour_manual(values = c(gray, highlight),
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2009 - 2019",
subtitle = "As fishnet centroids") +
mapTheme
dat2 <-
dat2 %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0)) %>%
st_transform("ESRI:102267")
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost19))) +
scale_colour_manual(values = c(gray, highlight),
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2009 - 2019",
subtitle = "As fishnet centroids") +
mapTheme
dat2 <-
dat2 %>%
mutate(sensitive_lost19 = ifelse(forest08 == 1 & forest19 == 0 |
wetlands08 == 1 & wetlands19 == 0,1,0)) %>%
st_transform("ESRI:102267")
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitive_lost19))) +
scale_colour_manual(values = c(gray, highlight),
labels=c("No Change","Sensitive Lost"),
name = "") +
labs(title = "Sensitive lands lost: 2009 - 2019",
subtitle = "As fishnet centroids") +
mapTheme
glimpse(dat2)
projection(wetlands19)
projection(forest19)
names(sensitiveRegions) <- "sensitiveRegions"
sensitiveRegions <-
raster::clump(wetlands19 + forest19) %>% #units are meters
rasterToPolygons() %>%
st_as_sf() %>%
group_by(clumps) %>%
summarize() %>%
mutate(Acres = as.numeric(st_area(.) * 0.0000229568)) %>% #do we need to change this conversion factor? There are 0.00024711 acres per square meter and 4046.86 square meters in an acre
filter(Acres > 3954)  %>%
dplyr::select() %>%
raster::rasterize(.,emptyRaster)
view(sensitiveRegions)
sensitiveRegions <-
raster::clump(wetlands19 + forest19) %>% #units are meters
rasterToPolygons() %>%
st_as_sf() %>%
group_by(clumps) %>%
summarize() %>%
mutate(Acres = as.numeric(st_area(.) * 0.0000229568)) %>% #do we need to change this conversion factor? There are 0.00024711 acres per square meter and 4046.86 square meters in an acre
filter(Acres > 3954)  %>%
dplyr::select() %>%
raster::rasterize(.,emptyRaster)
sensitiveRegions[sensitiveRegions > 0] <- 1
names(sensitiveRegions) <- "sensitiveRegions"
View(sensitiveRegions)
dat2 <-
aggregateRaster(c(sensitiveRegions), dat2) %>%
dplyr::select(sensitiveRegions) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat2) %>%
st_sf()
ggplot() +
geom_point(data=dat2, aes(x=xyC(dat2)[,1], y=xyC(dat2)[,2], colour=as.factor(sensitiveRegions))) +
scale_colour_manual(values = c(gray, highlight),
labels=c("Other","Sensitive Regions"),
name="") +
labs(title = "Sensitive regions",
subtitle = "Continous areas of either wetlands or forests\ngreater than 1 acre") +
mapTheme
county_specific_metrics <-
dat2 %>%
#predict development demand from our model
mutate(Development_Demand = predict(Model6, dat2, type="response")) %>%
#get a count count of grid cells by county which we can use to calculate rates below
left_join(st_set_geometry(dat, NULL) %>% group_by(NAME) %>% summarize(count = n())) %>%
#calculate summary statistics by county
group_by(NAME) %>%
summarize(Total_Farmland = sum(farm19) / max(count),
Total_Forest = sum(forest19) / max(count),
Total_Wetlands = sum(wetlands19) / max(count),
Total_Undeveloped = sum(otherUndeveloped19) / max(count),
Sensitive_Land_Lost = sum(sensitive_lost19) / max(count),
Sensitive_Regions = sum(sensitiveRegions) / max(count),
Mean_Development_Demand = mean(Development_Demand)) %>%
#get population data by county
left_join(countyPopulation_2029 %>%
mutate(Population_Change = county_projection_2029 - county_population_2019,
Population_Change_Rate = Population_Change / county_projection_2029) %>%
dplyr::select(NAME,Population_Change_Rate))
palette3
county_specific_metrics %>%
gather(Variable, Value, -NAME, -geometry) %>%
mutate(Variable = factor(Variable, levels=c("Population_Change_Rate","Mean_Development_Demand",
"Total_Farmland","Total_Undeveloped","Total_Forest",
"Total_Wetlands","Sensitive_Land_Lost","Sensitive_Regions",
ordered = TRUE))) %>%
mutate(Planning_Designation = case_when(
Variable == "Population_Change_Rate" | Variable == "Mean_Development_Demand" ~ "Demand-Side",
Variable == "Total_Farmland" | Variable == "Total_Undeveloped"               ~ "Suitable",
TRUE                                                                         ~ "Not Suitable")) %>%
ggplot(aes(x=Variable, y=Value, fill=Planning_Designation)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
facet_wrap(~NAME, ncol=5) +
coord_flip() +
scale_y_continuous(breaks = seq(.25, 1, by = .25)) +
geom_vline(xintercept = 2.5) + geom_vline(xintercept = 4.5) +
scale_fill_manual(values=c("#0D0887FF","#D8576BFF","#FDC926FF")) +
labs(title= "County Specific Allocation Metrics", subtitle= "As rates", x="Indicator", y="Rate") +
plotTheme + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="bottom")
county_specific_metrics %>%
gather(Variable, Value, -NAME, -geometry) %>%
mutate(Variable = factor(Variable, levels=c("Population_Change_Rate","Mean_Development_Demand",
"Total_Farmland","Total_Undeveloped","Total_Forest",
"Total_Wetlands","Sensitive_Land_Lost","Sensitive_Regions",
ordered = TRUE))) %>%
mutate(Planning_Designation = case_when(
Variable == "Population_Change_Rate" | Variable == "Mean_Development_Demand" ~ "Demand-Side",
Variable == "Total_Farmland" | Variable == "Total_Undeveloped"               ~ "Suitable",
TRUE                                                                         ~ "Not Suitable")) %>%
ggplot(aes(x=Variable, y=Value, fill=Planning_Designation)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
facet_wrap(~NAME, ncol=5) +
coord_flip() +
scale_y_continuous(breaks = seq(.25, 1, by = .25)) +
geom_vline(xintercept = 2.5) + geom_vline(xintercept = 4.5) +
scale_fill_manual(values=c("#0D0887FF","#D8576BFF","#FDC926FF")) +
labs(title= "County Specific Allocation Metrics", subtitle= "As rates", x="Indicator", y="Rate") +
plotTheme + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="bottom")
palette10
county_specific_metrics %>%
gather(Variable, Value, -NAME, -geometry) %>%
mutate(Variable = factor(Variable, levels=c("Population_Change_Rate","Mean_Development_Demand",
"Total_Farmland","Total_Undeveloped","Total_Forest",
"Total_Wetlands","Sensitive_Land_Lost","Sensitive_Regions",
ordered = TRUE))) %>%
mutate(Planning_Designation = case_when(
Variable == "Population_Change_Rate" | Variable == "Mean_Development_Demand" ~ "Demand-Side",
Variable == "Total_Farmland" | Variable == "Total_Undeveloped"               ~ "Suitable",
TRUE                                                                         ~ "Not Suitable")) %>%
ggplot(aes(x=Variable, y=Value, fill=Planning_Designation)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
facet_wrap(~NAME, ncol=5) +
coord_flip() +
scale_y_continuous(breaks = seq(.25, 1, by = .25)) +
geom_vline(xintercept = 2.5) + geom_vline(xintercept = 4.5) +
scale_fill_manual(values=c("#0D0887FF","#9C179EFF","#FDC926FF")) +
labs(title= "County Specific Allocation Metrics", subtitle= "As rates", x="Indicator", y="Rate") +
plotTheme + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="bottom")
dat2 <-
aggregateRaster(theRasterList19, dat) %>%
dplyr::select(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19) %>%
st_set_geometry(NULL) %>%
bind_cols(.,dat) %>%
st_sf() %>%
st_cast("POLYGON")
rasters19_map
dir)ct
dir_ct
