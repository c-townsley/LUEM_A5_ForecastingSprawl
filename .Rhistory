test <- AtlantaMSA_fishnet %>%
mutate(quintile =  ntile(lagDevelopment08, 5))
dat <-
cbind(
AtlantaMSA_fishnet, dev_change_fishnet, highwayPoints_fishnet, fishnetPop, aggregatedRasters08) %>%
dplyr::select(development_change, developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08,
pop09, pop19, pop_Change, distance_highways, lagDevelopment08) %>%
st_join(metro_counties) %>%
mutate(developed10 = ifelse(development_change  == 1 & developed08 == 1, 0, 1)) %>% #charlie to confirm if the else value should be 1 or 'developed'
filter(water08 == 0)
set.seed(3456)
trainIndex <-
createDataPartition(dat$developed08, p = .50,
list = FALSE,
times = 1)
datTrain <- dat[ trainIndex,]
datTest  <- dat[-trainIndex,]
nrow(dat)
options(yardstick.event_first = FALSE)
testSetProbs <-
testSetProbs %>%
mutate(predClass_05 = as.factor(ifelse(testSetProbs$probs >= 0.05 ,1,0)),
predClass_17 = as.factor(ifelse(testSetProbs$probs >= 0.17 ,1,0)))
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
kable() %>%
kable_styling(full_width = F)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable(., defaultPageSize = 5)
??reactable
library(reactable)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable(., defaultPageSize = 5)
library(kableExtra)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
kable() %>%
kable_styling(full_width = F)
predsForMap <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
dplyr::select(development_change,Threshold_5_Pct,Threshold_17_Pct) %>%
gather(Variable,Value, -geometry) %>%
st_cast("POLYGON")
ggplot() +
geom_point(data=predsForMap, aes(x=xyC(predsForMap)[,1], y=xyC(predsForMap)[,2], colour=Value)) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("No Change","New Development"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme
ggplot() +
geom_point(data=predsForMap, aes(x=xyC(predsForMap)[,1], y=xyC(predsForMap)[,2], colour=Value)) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("No Change","New Development"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
AtlantaMSA_fishnet$lagDevelopment08 <-
nn_function(xyC(AtlantaMSA_fishnet),
xyC(filter(aggregatedRasters08, developed08==1)),
2)
ggplot() +
geom_sf(data=metro_counties) +
geom_point(data=AtlantaMSA_fishnet,
aes(x=xyC(AtlantaMSA_fishnet)[,1], y=xyC(AtlantaMSA_fishnet)[,2],
colour=factor(ntile(lagDevelopment08,5))), size=1.5) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(AtlantaMSA_fishnet,"lagDevelopment"),1,7),
name="Quintile\nBreaks") +
labs(title = "Spatial Lag to 2008 Development",
subtitle = "As fishnet centroids") +
mapTheme
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable()
library(yardstick)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable()
??gt
library(gtable)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
gt()
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable()
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
kableExtra::kable() %>%
kableExtra::kable_styling(full_width = F)
testSetProbs %>%
dplyr::select(-probs) %>%
gather(Variable, Value, -class) %>%
group_by(Variable) %>%
summarize(Sensitivity = round(yardstick::sens_vec(class,factor(Value)),2),
Specificity = round(yardstick::spec_vec(class,factor(Value)),2),
Accuracy = round(yardstick::accuracy_vec(class,factor(Value)),2)) %>%
reactable()
predsForMap <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
dplyr::select(development_change,Threshold_5_Pct,Threshold_17_Pct) %>%
gather(Variable,Value, -geometry) %>%
st_cast("POLYGON")
ggplot() +
geom_point(data=predsForMap, aes(x=xyC(predsForMap)[,1], y=xyC(predsForMap)[,2], colour=Value)) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("No Change","New Development"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
ConfusionMatrix.metrics <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
mutate(TrueP_05 = ifelse(development_change  == 1 & Threshold_5_Pct == 1, 1,0),
TrueN_05 = ifelse(development_change  == 0 & Threshold_5_Pct == 0, 1,0),
TrueP_17 = ifelse(development_change  == 1 & Threshold_17_Pct == 1, 1,0),
TrueN_17 = ifelse(development_change  == 0 & Threshold_17_Pct == 0, 1,0)) %>%
dplyr::select(., starts_with("True")) %>%
gather(Variable, Value, -geometry) %>%
st_cast("POLYGON")
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") + mapTheme
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
ConfusionMatrix.metrics <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
mutate(TrueP_05 = ifelse(development_change  == 1 & Threshold_5_Pct == 1, 1,0),
TrueN_05 = ifelse(development_change  == 0 & Threshold_5_Pct == 0, 1,0),
TrueP_17 = ifelse(development_change  == 1 & Threshold_17_Pct == 1, 1,0),
TrueN_17 = ifelse(development_change  == 0 & Threshold_17_Pct == 0, 1,0)) %>%
dplyr::select(., starts_with("True")) %>%
gather(Variable, Value, -geometry) %>%
st_cast("POLYGON")
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
ConfusionMatrix.metrics <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
mutate(TrueP_05 = ifelse(development_change  == 1 & Threshold_5_Pct == 1, 1,0),
TrueN_05 = ifelse(development_change  == 0 & Threshold_5_Pct == 0, 1,0),
TrueP_17 = ifelse(development_change  == 1 & Threshold_17_Pct == 1, 1,0),
TrueN_17 = ifelse(development_change  == 0 & Threshold_17_Pct == 0, 1,0)) %>%
dplyr::select(., starts_with("True")) %>%
gather(Variable, Value, -geometry) %>%
st_cast("POLYGON")
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
ConfusionMatrix.metrics <-
dat %>%
mutate(probs = predict(Model6, dat, type="response") ,
Threshold_5_Pct = as.factor(ifelse(probs >= 0.05 ,1,0)),
Threshold_17_Pct =  as.factor(ifelse(probs >= 0.17 ,1,0))) %>%
mutate(TrueP_05 = ifelse(development_change  == 1 & Threshold_5_Pct == 1, 1,0),
TrueN_05 = ifelse(development_change  == 0 & Threshold_5_Pct == 0, 1,0),
TrueP_17 = ifelse(development_change  == 1 & Threshold_17_Pct == 1, 1,0),
TrueN_17 = ifelse(development_change  == 0 & Threshold_17_Pct == 0, 1,0)) %>%
dplyr::select(., starts_with("True")) %>%
gather(Variable, Value, -geometry) %>%
st_cast("POLYGON")
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = palette2, labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
palette2
ggplot(data=ConfusionMatrix.metrics) +
geom_point(aes(x=xyC(ConfusionMatrix.metrics)[,1],
y=xyC(ConfusionMatrix.metrics)[,2], colour = as.factor(Value))) +
facet_wrap(~Variable) +
scale_colour_manual(values = c(highlight, gray), labels=c("Correct","Incorrect"),
name="") +
labs(title="Development Predictions - Low Threshold") +
mapTheme +
theme(legend.position = "bottom")
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read(new_highway,"C:/Users/Lindsey/Desktop/CPLN675_Land_Use_Modeling_Desktop/Final/LUEM_A5_Repo/Data/geojson/new_highway.geojson")
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/d9859fc1069dd89d44fcaf345e722a9bf601a550/Data/geojson/highways_add.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties) %>%
highways_all <- highways_all %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/d9859fc1069dd89d44fcaf345e722a9bf601a550/Data/geojson/highways_add.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties) %>%
highways_all <- highways_all %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read(new_highway, (paste(dir_git, "a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson", sep='/'))
new_highway <- new_highway %>%
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read(new_highway, (paste(dir_git, "a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson", sep='/'))
Data/geojson/new_highway.geojson", sep='/'))
new_highway <- st_read(new_highway, (paste(dir_git, "a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/
Data/geojson/new_highway.geojson", sep='/'))
view(new_highway)
Data/geojson/new_highway.geojson", sep='/'))
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read(paste(dir_git, "a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson", sep='/'))
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read(dir_git, paste("a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson", sep='/'))
dir_git
#NEW HIGHWAY SEGMENT ONLY
new_highway <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/new_highway.geojson")
new_highway <- new_highway %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/highways_all.geojson")
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/d9859fc1069dd89d44fcaf345e722a9bf601a550/Data/geojson/highways_add.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties) %>%
highways_all <- highways_all %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/d9859fc1069dd89d44fcaf345e722a9bf601a550/Data/geojson/highways_add.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
highways_all <- st_read("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/a5a5b0c9099b97f68c0d1aeadcdfe9dbd2960a9a/Data/geojson/highways_add.geojson") %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
highways_all <- highways_all %>%
st_transform(st_crs(metro_counties)) %>%
st_intersection(metro_counties)
## I was trying to get the Existing Highways and New Highway legend items to appear but gave up for now.
ggplot() +
geom_sf(data=Atlanta_MSA) +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_color_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways in black and a new highway in cyan") +
geom_sf(data=AtlantaHighways, colour = "black") +
geom_sf(data=new_highway, colour="cyan", linewidth=1)+
#scale_color_manual(values=c("Existing Highways" = "black","New Highway" = "cyan"))+
mapTheme
#                  labels=c("Existing Highways", "New Highway"))
## I was trying to get the Existing Highways and New Highway legend items to appear but gave up for now.
ggplot() +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_colour_manual(values = c(gray, "#ED7953FF"),
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways in black and a new highway in cyan") +
geom_sf(data=AtlantaHighways, color = highlight, linewidth = .5) +
geom_sf(data = Atlanta_MSA, fill = "transparent",
color = "black", linewidth = .75) +
geom_sf(data=new_highway, colour="cyan", linewidth=1) +
#scale_color_manual(values=c("Existing Highways" = "black","New Highway" = "cyan"))+
mapTheme
#                  labels=c("Existing Highways", "New Highway"))
## I was trying to get the Existing Highways and New Highway legend items to appear but gave up for now.
ggplot() +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_colour_manual(values = c(gray, "#ED7953FF"),
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways in dar blue\n and a new highway in cyan") +
geom_sf(data=AtlantaHighways, color = highlight, linewidth = .5) +
geom_sf(data = Atlanta_MSA, fill = "transparent",
color = "black", linewidth = .75) +
geom_sf(data=new_highway, colour="cyan", linewidth=1) +
#scale_color_manual(values=c("Existing Highways" = "black","New Highway" = "cyan"))+
mapTheme
## I was trying to get the Existing Highways and New Highway legend items to appear but gave up for now.
ggplot() +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_colour_manual(values = c(gray, "#ED7953FF"),
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways\nin dark blue and a new highway in cyan") +
geom_sf(data=AtlantaHighways, color = highlight, linewidth = .5) +
geom_sf(data = Atlanta_MSA, fill = "transparent",
color = "black", linewidth = .75) +
geom_sf(data=new_highway, colour="cyan", linewidth=1) +
#scale_color_manual(values=c("Existing Highways" = "black","New Highway" = "cyan"))+
mapTheme
#Skip#
ggplot() +
geom_sf(data=Atlanta_MSA) +
geom_point(data=dev_change_fishnet,
aes(x=xyC(dev_change_fishnet)$x, y=xyC(dev_change_fishnet)$y, colour=development_change)) +
scale_color_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "Atlanta metro area | Fishnet centroids with existing highways in black and a new highway in cyan") +
geom_sf(data=highways_all, colour="black", linewidth=.5)+
mapTheme
new_highway_raster <-
as(highways_add,'Spatial') %>%
rasterize(.,emptyRaster)
glimpse(dat)
dat <-
cbind(
AtlantaMSA_fishnet, dev_change_fishnet, highwayPoints_fishnet, fishnetPop, aggregatedRasters08) %>%
dplyr::select(development_change, developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08,
pop09, pop19, pop_Change, distance_highways, lagDevelopment08) %>%
st_join(metro_counties) %>%
mutate(developed19 = ifelse(development_change  == 1 & developed08 == 1, 0, 1)) %>% #charlie to confirm if the else value should be 1 or 'developed'
filter(water08 == 0)
dat <-
dat %>%
mutate(lagDevelopment08 = nn_function(xyC(.), xyC(filter(., developed19 == 1)),2))
glimpse(metro_counties)
table(metro_counties$NAME)
Rockdale
glimpse(dat)
countyPopulation_2029 <-
data.frame(
NAME = Counties,
county_projection_2029 =
c(96977,119594,131577,301752,321410,830671,172341,32572,822154,160635,128627,
316165,1198334,1044026,232720,278739,130559,208196,95574,70974,109205)) %>%
left_join(
dat %>%
st_set_geometry(NULL) %>%
group_by(NAME) %>%
summarize(county_population_2019 = round(sum(pop19))))
view(countyPopulation_2029)
countyPopulation_2029 %>%
gather(Variable,Value, -NAME) %>%
ggplot(aes(reorder(NAME,-Value),Value)) +
geom_bar(aes(fill=Variable), stat = "identity", position = "dodge") +
scale_fill_manual(values = palette2,
labels=c("2029","2019"),
name="Population") +
labs(title="Population Change by County: 2019 - 2029",
x="County", y="Population") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
plotTheme
countyPopulation_2029 %>%
gather(Variable,Value, -NAME) %>%
ggplot(aes(reorder(NAME,-Value),Value)) +
geom_bar(aes(fill=Variable), stat = "identity", position = "dodge") +
scale_fill_manual(values = palette2,
labels=c("2019","2020"),
name="Population") +
labs(title="Population Change by County: 2019 - 2029",
x="County", y="Population") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
plotTheme
View(countyPopulation_2029)
glimpse(dat)
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2010,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2020.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2029,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2019,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2020.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2029,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2019,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2029.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2029,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
view(countyPopulation_2029)
dat_infill <-
dat %>%
#calculate population change
left_join(countyPopulation_2029) %>%
mutate(proportion_of_county_pop = pop19 / county_population_2019,
pop_2029.infill = proportion_of_county_pop * county_projection_2029,
pop_Change = round(pop_2029.infill - pop19),2) %>%
dplyr::select(-county_projection_2029, -county_population_2019,
-proportion_of_county_pop, -pop_2029.infill) %>%
#predict for 2029
mutate(predict_2029.infill = predict(Model6,. , type="response"))
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_20209.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill,"predict_2029.infill"),1,4),
name="Quintile\nBreaks") +
geom_sf(data=metro_counties, fill=NA, colour="black", size=.75) +
labs(title= "Development Demand in 2029: Predicted Probabilities") +
mapTheme
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2029.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill,"predict_2029.infill"),1,4),
name="Quintile\nBreaks") +
geom_sf(data=metro_counties, fill=NA, colour="black", size=.75) +
labs(title= "Development Demand in 2029: Predicted Probabilities") +
mapTheme
dat_infill %>%
ggplot() +
geom_point(aes(x=xyC(dat_infill)[,1], y=xyC(dat_infill)[,2], colour = factor(ntile(predict_2029.infill,5)))) +
scale_colour_manual(values = palette5,
labels=substr(quintileBreaks(dat_infill,"predict_2029.infill"),1,4),
name="Quintile\nBreaks") +
geom_sf(data=metro_counties, fill=NA, colour="white", size=.75) +
labs(title= "Development Demand in 2029: Predicted Probabilities") +
mapTheme
