palette4 <- c("#0D0887FF","#9C179EFF","#D8576BFF","#FA9E3BFF")
palette5 <- c("#0D0887FF","#9C179EFF","#D8576BFF","#ED7953FF","#FDC926FF")
palette10 <- c("#0D0887FF","#47039FFF","#7301A8FF","#9C179EFF","#BD3786FF",
"#D8576BFF","#ED7953FF","#FA9E3BFF","#FDC926FF","#F0F921FF")
#this function converts a column in to quintiles. It is used for mapping.
quintileBreaks <- function(df,variable) {
as.character(quantile(df[[variable]],
c(.01,.2,.4,.6,.8),na.rm=T))
}
#This function can be used to convert a polygon sf to centroids xy coords.
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
#this function convert a raster to a data frame so it can be plotted in ggplot
rast <- function(inRaster) {
data.frame(
xyFromCell(inRaster, 1:ncell(inRaster)),
value = getValues(inRaster)) }
#this function aggregates rasters
aggregateRaster <- function(inputRasterList, AtlantaMSA_fishnet) {
#create an empty fishnet with the same dimensions as the input fishnet
theseFishnets <- AtlantaMSA_fishnet %>% dplyr::select()
#for each raster in the raster list
for (i in inputRasterList) {
#create a variable name corresponding to the ith raster
varName <- names(i)
#convert raster to points as an sf
thesePoints <-
rasterToPoints(i) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(AtlantaMSA_fishnet)) %>%
filter(.[[1]] == 1)
#aggregate to the fishnet
thisFishnet <-
aggregate(thesePoints, AtlantaMSA_fishnet, length) %>%
mutate(!!varName := ifelse(is.na(.[[1]]),0,1))
#add to the larger fishnet
theseFishnets <- cbind(theseFishnets, thisFishnet)
}
#output all aggregates as one large fishnet
return(theseFishnets)
}
#List of the Atlanta region MPOs 21 counties
Counties <- c("Barrow", "Bartow", "Carroll", "Cherokee",
"Clayton", "Cobb", "Coweta", "Dawson",
"DeKalb", "Douglas", "Fayette", "Forsyth",
"Fulton", "Gwinnett", "Hall", "Henry",
"Newton", "Paulding", "Rockdale", "Spalding", "Walton")
#First pull all MSAs in the U.S., then search for yours and filter with the correct CBSAFP code
metro_counties <- counties(state = "GA", cb = TRUE, resolution = "500k", year = NULL) %>%
filter(NAME %in% Counties) %>%
st_transform("ESRI:102267")
#Merge counties into one shapefile showing just the boundary
Atlanta_MSA <- st_union(metro_counties) %>%
st_transform("ESRI:102267")
#plot MSA boundary to make sure its right
ggplot() +
geom_sf(data = metro_counties) +
geom_sf(data = Atlanta_MSA,
color = "black", fill = "transparent", linewidth = .75) +
mapTheme +
labs(title = "Atlanta 21 County MSA")
AtlantaMSA_fishnet <-
st_make_grid(metro_counties, cellsize = 2000, square = FALSE) %>%
st_sf() %>%
st_transform("ESRI:102267")
AtlantaMSA_fishnet <-
AtlantaMSA_fishnet[metro_counties,]
#plot MSA boundary to make sure its right
ggplot()+
geom_sf(data = AtlantaMSA_fishnet,
fill = "lightgrey") +
geom_sf(data = Atlanta_MSA,
color = "black", fill = "transparent", linewidth = .75) +
labs(title = "Atlanta MSA Fishnet") +
mapTheme
#load full size rasters
lc_2008 = raster("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/56bd35b343d39e88bd8e1fdc89957e6ccb804fe9/Data/raster/2008LC_proj.tif")
lc_2019 = raster("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/56bd35b343d39e88bd8e1fdc89957e6ccb804fe9/Data/raster/2019LC_proj.tif")
#down sample the raster to make more manageable
lc_2008 <- aggregate(lc_2008, fact = 2, fun = modal)
lc_2019 <- aggregate(lc_2019, fact = 2, fun = modal)
#crop rasters
lc_2008_crop <- crop(lc_2008, extent(metro_counties))
lc_2019_crop <- crop(lc_2019, extent(metro_counties))
#mask rasters
lc_2008_crop <- mask(x = lc_2008_crop, mask = metro_counties)
lc_2019_crop <- mask(x = lc_2019_crop, mask = metro_counties)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008_crop) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019_crop) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
lc_2008 <- raster("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/795eb6bf1286d55f5488473fb9a8f10dc7478fef/Data/raster/lc2008_sml.tif")
lc_2019 <- raster("https://raw.githubusercontent.com/c-townsley/LUEM_A5_Repo/795eb6bf1286d55f5488473fb9a8f10dc7478fef/Data/raster/lc2019_sml.tif")
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
#reclassify landcover into developed and not developed
developed08 <- lc_2008 == 21 | lc_2008 == 22 | lc_2008 == 23 | lc_2008 == 24
forest08 <- lc_2008 == 41 | lc_2008 == 42 | lc_2008 == 43
farm08 <- lc_2008 == 81 | lc_2008 == 82
wetlands08 <- lc_2008 == 90 | lc_2008 == 95
otherUndeveloped08 <- lc_2008 == 52 | lc_2008 == 71 | lc_2008 == 31
water08 <- lc_2008 == 11
developed19 <- lc_2019 == 21 | lc_2019 == 22 | lc_2019 == 23 | lc_2019 == 24
forest19 <- lc_2019 == 41 | lc_2019 == 42 | lc_2019 == 43
farm19 <- lc_2019 == 81 | lc_2019 == 82
wetlands19 <- lc_2019 == 90 | lc_2019 == 95
otherUndeveloped19 <- lc_2019 == 52 | lc_2019 == 71 | lc_2019 == 31
water19 <- lc_2019 == 11
names(developed08) <- "developed08"
names(forest08) <- "forest08"
names(farm08) <- "farm08"
names(wetlands08) <- "wetlands08"
names(otherUndeveloped08) <- "otherUndeveloped08"
names(water08) <- "water08"
names(developed19) <- "developed19"
names(forest19) <- "forest19"
names(farm19) <- "farm19"
names(wetlands19) <- "wetlands19"
names(otherUndeveloped19) <- "otherUndeveloped19"
names(water19) <- "water19"
theRasterList08 <- c(developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08)
theRasterList19 <- c(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19)
### This part has a dataframe issue
aggregatedRasters08 <-
aggregateRaster(theRasterList08, AtlantaMSA_fishnet) %>%
dplyr::select(developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08) %>%
mutate_if(is.numeric, as.factor)
aggregatedRasters08 %>%
gather(var,value,developed08:water08) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2009",
subtitle = "As fishnet centroids") +
mapTheme
theRasterList08 <- c(developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08)
theRasterList19 <- c(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19)
### This part has a dataframe issue
aggregatedRasters19 <-
aggregateRaster(theRasterList19, AtlantaMSA_fishnet) %>%
dplyr::select(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19) %>%
mutate_if(is.numeric, as.factor)
aggregatedRasters19 %>%
gather(var,value,developed19:water19) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2019",
subtitle = "As fishnet centroids") +
mapTheme
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
reclassMatrix
#reclassify land cover change using reclass matrix
lc_2008r <-
reclassify(lc_2008, reclassMatrix)
lc_2008r[lc_2008r < 1] <- NA
names(lc_2008r) <- "lc_change08"
lc_2019r <-
reclassify(lc_2019, reclassMatrix)
lc_2019r[lc_2019r < 1] <- NA
names(lc_2019r) <- "lc_change19"
ggplot() +
geom_sf(data=AtlantaMSA_fishnet) +
geom_raster(data=rast(lc_2008r) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
option="C",
name ="Land Cover\nChange") +
labs(title="Development Land Use Change") +
mapTheme
ggplot() +
geom_sf(data=Atlanta_MSA) +
geom_raster(data=rast(lc_2008r) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
option="C",
name ="Land Cover\nChange") +
labs(title="Development Land Use Change") +
mapTheme
changePoints <-
rasterToPoints(lc_2008r) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(AtlantaMSA_fishnet))
fishnet <-
aggregate(changePoints, AtlantaMSA_fishnet, sum) %>%
mutate(lc_2008r = ifelse(is.na(lc_2008r),0,1),
lc_2008r = as.factor(lc_2008r))
fishnet <-
aggregate(changePoints, AtlantaMSA_fishnet, sum)
fishnet <-
aggregate(changePoints, AtlantaMSA_fishnet, sum) %>%
mutate(lc_2008r = ifelse(is.na(lc_2008r),0,1))
summary(lc_2008r)
View(lc_2008r)
View(fishnet)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .5) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .5) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .5) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "black",
fill = "transparent",
linewidth = .5) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "white",
fill = "transparent",
linewidth = .75) +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "white",
fill = "transparent",
linewidth = .75) +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
grid.arrange(ncol = 1,
ggplot() +
geom_raster(data=rast(lc_2008) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "white",
fill = "transparent",
linewidth = .5) +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2008") +
mapTheme +
theme(legend.direction="horizontal"),
ggplot() +
geom_raster(data=rast(lc_2019) %>% na.omit %>% filter(value > 0),
aes(x, y, fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE,
name ="",
option = "C") +
geom_sf(data=metro_counties,
color = "white",
fill = "transparent",
linewidth = .5) +
geom_sf(data=Atlanta_MSA,
color = "black",
fill = "transparent",
linewidth = .75) +
labs(title = "Land Cover, 2019") +
mapTheme +
theme(legend.direction="horizontal")
)
theRasterList08 <- c(developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08)
theRasterList19 <- c(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19)
### This part has a dataframe issue
aggregatedRasters19 <-
aggregateRaster(theRasterList19, AtlantaMSA_fishnet) %>%
dplyr::select(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19) %>%
mutate_if(is.numeric, as.factor)
aggregatedRasters19 %>%
gather(var,value,developed19:water19) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2019",
subtitle = "As fishnet centroids") +
mapTheme
gray <- "#D3D3D3"
highlight <- "#0D0887FF"
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = c(gray, highlight)
labels=c("False","True"),
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = c(gray, highlight),
labels=c("False","True"),
name = "") +
labs(title = "Land Cover Types, 2019",
subtitle = "As fishnet centroids") +
mapTheme
aggregatedRasters19 %>%
gather(var,value,developed19:water19) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=metro_counties) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = c(gray, highlight),
labels=c("False","True"),
name = "") +
labs(title = "Land Cover Types, 2019",
subtitle = "As fishnet centroids") +
mapTheme
theRasterList08 <- c(developed08, forest08, farm08, wetlands08, otherUndeveloped08, water08)
theRasterList19 <- c(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19)
aggregatedRasters19 <-
aggregateRaster(theRasterList19, AtlantaMSA_fishnet) %>%
dplyr::select(developed19, forest19, farm19, wetlands19, otherUndeveloped19, water19) %>%
mutate_if(is.numeric, as.factor)
